name: Frontend CI/CD

on:
  push:
    branches: [main]          # despliega cada push a main
  workflow_dispatch:

# Evita jobs simultáneos en la misma rama
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  NODE_VERSION: 16
  BUILD_DIR: packages/website/apps/easyroute   # ← carpeta de salida de tu build

jobs:
  build:
    runs-on: [self-hosted, linux, poolpo-frontend]

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Activar Yarn classic 1.22.19         # ← sustituye aquí
        run: |
          corepack enable
          corepack prepare yarn@1.22.19 --activate
          yarn -v

      - uses: actions/cache@v4
        with:
          path: ~/.cache/yarn
          key: yarn-${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: yarn-${{ runner.os }}-

      - name: Install deps & build
        run: |
          yarn install --frozen-lockfile
          npx lerna run build --stream    # o yarn build si prefieres

      - uses: actions/upload-artifact@v4
        with:
          name: website-build
          path: ${{ env.BUILD_DIR }}/

# ──────────────────────────────────────────
# 2) DEPLOY
# ──────────────────────────────────────────
  deploy:
    needs: build
    runs-on: [self-hosted, linux, poolpo-frontend]

    steps:
      - uses: actions/download-artifact@v4
        with:
          name: website-build
          path: ./website-build            # se descarga aquí mismo

      - name: Sync to Nginx (atomic)
        run: |
          NEXT=/var/www/kacha-frontend_next
          sudo mkdir -p "$NEXT"
          sudo rsync -av --delete ./website-build/ "$NEXT"/
          sudo chown -R www-data:www-data "$NEXT"
          sudo ln -sfn "$NEXT" /var/www/kacha-frontend

      - name: Reload Nginx
        run: sudo systemctl reload nginx
